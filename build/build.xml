<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="all" name="Summa">
 <property name="saxon-pe.location.ant" value="/home/vic/Programs/jar/saxon9he.jar"/>
 <property name="project.home.ant" value="/home/vic/Drive/GelovenLeren/Summa/build/"/>
  

 <!--
   kapitel: [BRON] kopie van het boek van de website kirchevaeter.de
   kapitel_tidy: kapitel na html tidying
   xml_latin: alle files uit kapitel_tidy gebundeld en gestructureerd als xml (platte lijst van lemma's)
   xml_latin_tree: xml_latin met hierarchische structuur en gesorteerd
   geloofsverdediging: [BRON] opgekuiste tekstfiles van de Nederlandse vertaling
      elk lemma is voorafgegaan door een label, bv. 1.2.3.co (boek I, quaestio 2, artikel 3, leerstelling)
   geloofsverdediging_xml: de files uit geloofsverdediging gestructureerd als xml (platte lijst)
   geloofsverdedigin_titels: [BRON] opgekuiste tekstfiles van de inhoudstafel van de Nederlandse vertaling
      elke reeks titel is voorafgegaan door een label, bv. 1.2 (boek I, quaestio 2)
      eerst volgt dan de titel van de quaestio en vervolgens de titels van de artikels
   geloofsverdediging_titels_xml: de files uit geloofsverdediging_titels gestructureerd als xml
   xml_latin_nl: xml_latin_tree with dutch texts and titles sucked in
   summa: xml_latin_nl transformed into the website pages (exc. the welcome page) + the index xml (for Alledaags)
   deploy: copy summa/**.* to ../docs/**.* (which is published on GitHub)
   markdown: xml_latin_nl transformed into markdown files
   -->

 <target name="all" depends="summa"/>
 
 <target name="clean">
  <delete>
   <!--fileset dir="kapitel_tidy" includes="*.*"/-->
   <!--fileset dir="xml_latin" includes="xml_latin.xml"/--><!-- commented out because kapitel is missing q 80 in part 3, which is manually added in xml_latin.xml -->
   <fileset dir="summa" includes="liber*.*"/><!-- don't delete the index.html and other html resources -->
  </delete>
 </target>
 
 <target name="kapitel_tidy">
  <!--apply executable="tidy" dest="kapitel_tidy">
   <arg line="-asxhtml"/>
   <arg line="-quiet"/>
   <arg line="-output"/>
   <targetfile/>
   <srcfile/>
   <fileset dir="kapitel" includes="*.htm"/>
   <identitymapper/>
  </apply--><!-- commented out because kapitel is missing q 80 in part 3, which is manually added in xml_latin.xml -->
 </target>

 <target name="geloofsverdediging_xml">
  <apply executable="python3" addsourcefile="false">
    <arg line="geloofsverdediging2xml.py"/>
    <fileset dir="geloofsverdediging" includes="*.txt"/>
    <redirector>
        <!-- redirect STDIN; fileset collects relative to its dir, but we need -->
        <!-- relative to basedir -->
        <inputmapper type="glob" from="*" to="geloofsverdediging/*"/>
        <!-- redirect STDOUT to file in dest-dir -->
        <outputmapper id="out" type="glob" from="*.txt" to="geloofsverdediging_xml/*.xml"/>
    </redirector>
  </apply>
 </target>

 <target name="xml_latin" depends="kapitel_tidy">
  <!-- this task will only run if the target directory is emptied !! -->
  <!-- transform the set of kapitel*.html files into a single xml file -->
  <!-- the stylesheet is only run once, using the dummy.html as fake input -->
  <!--xslt style="xml_latin.xslt" in="dummy.htm" out="xml_latin/xml_latin.xml">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt--><!-- commented out because kapitel is missing stuff, which is manually added in xml_latin.xml -->
 </target>

 <target name="xml_latin_tree" depends="xml_latin">
  <xslt style="xml_latin_tree.xslt" in="xml_latin/xml_latin.xml" out="xml_latin_tree/xml_latin_tree.xml">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
 </target>
 
 <target name="geloofsverdediging_titels_xml">
  <apply executable="python3" addsourcefile="false">
    <arg line="geloofsverdediging_titels2xml.py"/>
    <fileset dir="geloofsverdediging_titels" includes="*.txt"/>
    <redirector>
        <!-- redirect STDIN; fileset collects relative to its dir, but we need -->
        <!-- relative to basedir -->
        <inputmapper type="glob" from="*" to="geloofsverdediging_titels/*"/>
        <!-- redirect STDOUT to file in dest-dir -->
        <outputmapper id="out" type="glob" from="*.txt" to="geloofsverdediging_titels_xml/*.xml"/>
    </redirector>
  </apply>
 </target>

 <target name="xml_latin_nl" depends="xml_latin_tree, geloofsverdediging_xml,geloofsverdediging_titels_xml">
  <!-- touch the xml_latin_tree.xml if you want this target to run -->
  <!--touch file="xml_latin_tree/xml_latin_tree.xml"/-->
  <xslt style="xml_latin_nl.xslt" in="xml_latin_tree/xml_latin_tree.xml" out="xml_latin_nl/xml_latin_nl.xml">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
 </target>
 
 <target name="summa" depends="xml_latin_nl">
  <xslt style="summa.xslt" in="xml_latin_nl/xml_latin_nl.xml" out="dummy-output.summa">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
  <delete file="dummy-output.summa"/>
 </target>

 <target name="summa-index" depends="xml_latin_nl">
  <xslt style="index.xslt" in="xml_latin_nl/xml_latin_nl.xml" out="summa/index.xml">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
  <xslt style="sitemap.xslt" in="xml_latin_nl/xml_latin_nl.xml" out="summa/sitemap.txt">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
 </target>

 <target name="robots">
   <echo file="summa/robots.txt">User-agent: *
Disallow: /bronbestanden/</echo>
 </target>

 <target name="deploy" depends="summa,summa-index,robots">
  <copy todir="../docs">
    <fileset dir="summa" includes="**"/>
  </copy>
 </target>

 <target name="markdown" depends="xml_latin_nl">
  <xslt style="markdown.xslt" in="xml_latin_nl/xml_latin_nl.xml" out="dummy-output.markdown">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
  <delete file="dummy-output.markdown"/>
 </target>

 <target name="markdown-2-3-4" depends="xml_latin_nl">
  <xslt style="markdown-2-3-4.xslt" in="xml_latin_nl/xml_latin_nl.xml" out="dummy-output.markdown">
   <classpath location="${saxon-pe.location.ant}" />
  </xslt>
  <delete file="dummy-output.markdown"/>
 </target>

 <target name="pdf" depends="markdown">
  <apply executable="pandoc" dest="pdf">
   <srcfile/>
   <arg line="-f"/>
   <arg line="markdown"/>
   <arg line="-o"/>
   <targetfile/>
   <fileset dir="markdown" includes="*.md"/>
   <globmapper from="*.md" to="*.pdf"/>
  </apply>
 </target>
  
 <target name="pdf-2-3-4" depends="markdown-2-3-4">
  <apply executable="pandoc" dest="pdf">
   <srcfile/>
   <arg line="-f"/>
   <arg line="markdown"/>
   <arg line="-o"/>
   <targetfile/>
   <fileset dir="markdown" includes="*-2-3-4.md"/>
   <globmapper from="*.md" to="*.pdf"/>
  </apply>
 </target>
  
 <target name="deploy-pdf" depends="pdf,pdf-2-3-4">
     <copy todir="../docs/pdf">
    <fileset dir="pdf" includes="Aquino_Summa_1.pdf"/>
    <fileset dir="pdf" includes="Aquino_Summa-2-3-4.pdf"/>
  </copy>
 </target>

</project>
